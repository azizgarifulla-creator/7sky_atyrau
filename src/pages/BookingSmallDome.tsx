import { useState } from 'react';
import { useLanguage } from '@/contexts/LanguageContext';
import { Header } from '@/components/Header';
import { Footer } from '@/components/Footer';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { Clock, Users, Phone, MessageSquare, CreditCard, AlertCircle } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

const BookingSmallDome = () => {
  const { t } = useLanguage();
  const { toast } = useToast();
  
  const [selectedTime, setSelectedTime] = useState<string>('');
  const [phone, setPhone] = useState('');
  const [wishes, setWishes] = useState('');
  const [additionalServices, setAdditionalServices] = useState<string[]>([]);
  
  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –∫—É–ø–æ–ª–∞
  const timeSlots = [
    '18:00', '20:00', '22:00', '00:00', '02:00', '04:00'
  ];
  
  // –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
  const bookedSlots = ['20:00', '00:00'];
  
  const services = [
    { id: 'decoration', name: t('decoration'), price: '5000 ‚Ç∏' },
    { id: 'music', name: t('musicSetup'), price: '3000 ‚Ç∏' },
    { id: 'flowers', name: t('flowers'), price: '8000 ‚Ç∏' },
    { id: 'photographer', name: t('photographer'), price: '15000 ‚Ç∏' }
  ];

  const handleServiceChange = (serviceId: string, checked: boolean) => {
    if (checked) {
      setAdditionalServices([...additionalServices, serviceId]);
    } else {
      setAdditionalServices(additionalServices.filter(s => s !== serviceId));
    }
  };

  const handleBooking = () => {
    if (!selectedTime) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
        variant: "destructive"
      });
      return;
    }
    
    if (!phone) {
      toast({
        title: "–û—à–∏–±–∫–∞", 
        description: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
        variant: "destructive"
      });
      return;
    }

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ Kaspi
    window.open('https://pay.kaspi.kz/pay/nultwafm', '_blank');
    
    toast({
      title: "–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ–ø–ª–∞—Ç—É",
      description: "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ Kaspi –¥–ª—è –æ–ø–ª–∞—Ç—ã",
    });
  };

  return (
    <div className="min-h-screen bg-background text-foreground">
      <Header />
      
      {/* Hero section with blurred dome background */}
      <section className="relative min-h-[60vh] flex items-center justify-center overflow-hidden">
        <div 
          className="absolute inset-0 bg-cover bg-center blur-sm scale-105"
          style={{
            backgroundImage: "url('/src/assets/dome-background.jpg')",
          }}
        />
        <div className="absolute inset-0 bg-background/40" />
        
        <div className="relative z-10 text-center">
          <h1 className="text-4xl md:text-6xl font-bold mb-6">
            <span className="bg-gradient-sunset bg-clip-text text-transparent">
              –ú–∞–ª–µ–Ω—å–∫–∏–π –∫—É–ø–æ–ª
            </span>
          </h1>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –≤–µ—á–µ—Ä –¥–ª—è –¥–≤–æ–∏—Ö –≤ —É—é—Ç–Ω–æ–º –Ω–µ–±–µ—Å–Ω–æ–º –∫—É–ø–æ–ª–µ
          </p>
        </div>
      </section>

      {/* Booking section */}
      <section className="py-20 bg-gradient-dome">
        <div className="container mx-auto px-4 max-w-4xl">
          
          {/* Time slots */}
          <Card className="border-border/50 shadow-elegant mb-8">
            <CardHeader>
              <CardTitle className="text-2xl font-bold text-foreground flex items-center">
                <Clock className="w-6 h-6 text-primary mr-3" />
                –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                {timeSlots.map((time) => {
                  const isBooked = bookedSlots.includes(time);
                  return (
                    <Button
                      key={time}
                      variant={selectedTime === time ? "dome" : isBooked ? "secondary" : "hero"}
                      className={`h-16 text-lg font-semibold ${
                        isBooked ? 'opacity-50 cursor-not-allowed' : ''
                      }`}
                      disabled={isBooked}
                      onClick={() => !isBooked && setSelectedTime(time)}
                    >
                      {time}
                      {isBooked && (
                        <div className="text-xs text-muted-foreground mt-1">
                          –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ
                        </div>
                      )}
                    </Button>
                  );
                })}
              </div>
            </CardContent>
          </Card>

          {/* Contact form */}
          <Card className="border-border/50 shadow-elegant mb-8">
            <CardHeader>
              <CardTitle className="text-2xl font-bold text-foreground flex items-center">
                <Phone className="w-6 h-6 text-primary mr-3" />
                –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div>
                <Label htmlFor="phone" className="text-foreground">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *</Label>
                <Input
                  id="phone"
                  type="tel"
                  placeholder="+7 777 123 45 67"
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                  className="mt-2"
                />
              </div>
              
              <div>
                <Label htmlFor="wishes" className="text-foreground">–í–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è</Label>
                <Textarea
                  id="wishes"
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∏–ª–∏ –æ—Å–æ–±—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö..."
                  value={wishes}
                  onChange={(e) => setWishes(e.target.value)}
                  className="mt-2 min-h-[100px]"
                />
              </div>
            </CardContent>
          </Card>

          {/* Additional services */}
          <Card className="border-border/50 shadow-elegant mb-8">
            <CardHeader>
              <CardTitle className="text-2xl font-bold text-foreground flex items-center">
                <Users className="w-6 h-6 text-primary mr-3" />
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {services.map((service) => (
                  <div key={service.id} className="flex items-center space-x-3">
                    <Checkbox 
                      id={service.id}
                      checked={additionalServices.includes(service.id)}
                      onCheckedChange={(checked) => handleServiceChange(service.id, checked as boolean)}
                    />
                    <Label 
                      htmlFor={service.id} 
                      className="flex-1 flex justify-between items-center cursor-pointer"
                    >
                      <span className="text-foreground">{service.name}</span>
                      <span className="text-primary font-semibold">{service.price}</span>
                    </Label>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Food information */}
          <Card className="border-border/50 shadow-elegant mb-8">
            <CardHeader>
              <CardTitle className="text-xl font-bold text-foreground flex items-center">
                <MessageSquare className="w-5 h-5 text-primary mr-3" />
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∏—Ç–∞–Ω–∏–∏
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4 text-foreground/80">
                <p>
                  ü•êüç∞ –£ –Ω–∞—Å –Ω–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∫—É—Ö–Ω–∏, –Ω–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –º–µ–Ω—é –Ω–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ‚Äì —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ Bretzel –∏ –ø–æ–º–æ–∂–µ–º –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–¥–∑–∞–∫–∞–∑
                </p>
                <p>
                  üç± –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–∏–Ω–µ—Å—Ç–∏ —Å–≤–æ—é –µ–¥—É —Å —Å–æ–±–æ–π
                </p>
                <p className="text-destructive font-medium">
                  üö´ü•Ç –ê–ª–∫–æ–≥–æ–ª—å –∏ –Ω–∞–ø–∏—Ç–∫–∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ
                </p>
              </div>
            </CardContent>
          </Card>

          {/* Booking summary and payment */}
          <Card className="border-primary/30 shadow-glow">
            <CardHeader>
              <CardTitle className="text-2xl font-bold text-foreground flex items-center">
                <CreditCard className="w-6 h-6 text-primary mr-3" />
                –û–ø–ª–∞—Ç–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {selectedTime && (
                  <div className="bg-muted/30 rounded-lg p-4">
                    <h4 className="font-semibold text-foreground mb-2">–í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:</h4>
                    <p className="text-foreground/80">–í—Ä–µ–º—è: {selectedTime}</p>
                    <p className="text-foreground/80">–ö—É–ø–æ–ª: –ú–∞–ª–µ–Ω—å–∫–∏–π (–¥–æ 6 —á–µ–ª–æ–≤–µ–∫)</p>
                    <p className="text-foreground/80">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 2 —á–∞—Å–∞</p>
                  </div>
                )}
                
                <div className="flex items-start space-x-3 p-4 bg-primary/10 rounded-lg">
                  <AlertCircle className="w-5 h-5 text-primary flex-shrink-0 mt-0.5" />
                  <p className="text-sm text-foreground/80">
                    –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å" –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ Kaspi –¥–ª—è –æ–ø–ª–∞—Ç—ã. 
                    –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤–∞—à–µ –≤—Ä–µ–º—è –±—É–¥–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ.
                  </p>
                </div>

                <Button 
                  variant="dome" 
                  size="lg" 
                  className="w-full text-lg"
                  onClick={handleBooking}
                  disabled={!selectedTime || !phone}
                >
                  <CreditCard className="w-5 h-5" />
                  –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ Kaspi
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default BookingSmallDome;